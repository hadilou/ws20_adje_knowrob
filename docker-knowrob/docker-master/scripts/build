#!/bin/bash
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

declare -A BUILDOPTS=()
hasargs=false

for var in "$@"
do
    BUILDOPTS[$var]=true
    hasargs=true
done

if [ "${BUILDOPTS["help"]}" == true ]; then
	echo "Knowrob docker buildtool - Usage:"
	echo "   ./build [OPTION [OPTION [OPTION...]]]"
	echo ""
	echo "Valid options are:"
	echo "  == Modules to build =="
	echo "  default - Builds dockerbridge and webapps (default if no module build parameters are given)"
	echo "  all - Builds all modules"
	echo "  knowrob - Builds knowrob and its base images"
	echo "  dockerbridge - Builds dockerbridge"
	echo "  webapps - Builds webapps"
	echo ""
	echo "  == Options for build =="
	echo "  nocache - Runs docker build with --no-cache option"
    echo "  stopcache - Stops the cache containers"
	echo "  clean - Runs cleanup script after build"
	echo "  == Misc options =="
	echo "  help - Prints this message and exits"
	exit
fi

if ! $hasargs; then
	BUILDOPTS["default"]=true
fi

function build() {
	echo "Building $2 from $DIR/../$1"
	if [ "${BUILDOPTS["nocache"]}" == true ]; then
		_NOCACHE="--no-cache"
	else
		_NOCACHE=""
	fi
	cd $DIR/../$1 && docker build $_NOCACHE -t $2 .
}

if [[ -z "$OPENEASE_ROS_DISTRIBUTION" ]]; then
       echo "No ros distribution given as the environment variable, building hydro as default"
fi

if [ "${BUILDOPTS["all"]}" == true ] || [ "${BUILDOPTS["knowrob"]}" == true ]; then
       HOST_IP=`ip route list dev docker0 | awk 'NR==1 {print $NF}'`

       echo "Starting caching containers..."
       $DIR/start-apt-cacher
       $DIR/start-nexus


       if [ "$OPENEASE_ROS_DISTRIBUTION" == "hydro" ] ; then
                echo "Building hydro"
	        #build hydro/hydro-swi openease/hydro-swi
                $DIR/../hydro/hydro-swi/build.sh
	        build hydro/hydro-knowrob-daemon openease/hydro-knowrob-daemon
       elif [ "$OPENEASE_ROS_DISTRIBUTION" == "kinetic" ] ; then
	        echo "Building kinetic"
	        #build kinetic/kinetic-swi openease/kinetic-swi
                $DIR/../kinetic/kinetic-swi/build.sh
	        build kinetic/kinetic-knowrob-daemon openease/kinetic-knowrob-daemon
       else	
	        echo "Building indigo"
	        #build indigo/indigo-swi openease/indigo-swi
                $DIR/../indigo/indigo-swi/build.sh
	        build indigo/indigo-knowrob-daemon openease/indigo-knowrob-daemon
       fi
fi


if [ "${BUILDOPTS["dockerbridge"]}" == true ] || [ "${BUILDOPTS["default"]}" == true ] || [ "${BUILDOPTS["all"]}" == true ]; then
	build dockerbridge knowrob/dockerbridge
fi

if [ "${BUILDOPTS["webapps"]}" == true ] || [ "${BUILDOPTS["default"]}" == true ] || [ "${BUILDOPTS["all"]}" == true ]; then
	build user_data knowrob/user_data
	build flask openease/flask
        build dns openease/dns
	#build webapps/easeapp openease/easeapp
	#build webapps/login openease/login
	#build webapps/knowrob openease/knowrob
fi

if [ "${BUILDOPTS["stopcache"]}" == true ]; then
	echo "Stopping caching containers..."
	docker stop -t 3 apt-cacher-run nexus-run
fi

if [ "${BUILDOPTS["clean"]}" == true ]; then
	echo "Cleaning docker images..."
	$DIR/dockerclean
fi
